services:
  main:
    container_name: main
    build:
      context: .
      dockerfile: ./build/main.Dockerfile
    depends_on:
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8080:8080"
    networks:
      - purify-network
    volumes:
      - type: bind
        source: ${LOG_DIRECTORY}
        target: /var/log/purify

  nlp:
    container_name: nlp
    build:
      context: .
      dockerfile: ./nlp_words_app/Dockerfile
    depends_on:
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - "5001:5001"
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
    volumes:
      - ./nlp_words_app:/app
    command: [ "python", "app.py" ]
    networks:
      - purify-network

  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - .env
    volumes:
      - ./redis.conf:/etc/redis/redis.conf
      - redis-data:/data
    command: [ "redis-server", "/etc/redis/redis.conf" ]
    ports:
      - "6379:6379"
    networks:
      - purify-network

networks:
  purify-network:
    name: purify-network
    driver: bridge

volumes:
  redis-data:
